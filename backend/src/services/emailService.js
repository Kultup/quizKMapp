const nodemailer = require('nodemailer');

class EmailService {
  constructor() {
    this.transporter = null;
    this.initializeTransporter();
  }

  initializeTransporter() {
    if (process.env.EMAIL_HOST && process.env.EMAIL_USER && process.env.EMAIL_PASS) {
      this.transporter = nodemailer.createTransport({
        host: process.env.EMAIL_HOST,
        port: process.env.EMAIL_PORT || 587,
        secure: false,
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASS
        }
      });
    }
  }

  async sendQuizNotification(userEmail, userName, quizData) {
    if (!this.transporter) {
      console.log('Email service not configured, skipping email notification');
      return;
    }

    try {
      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: userEmail,
        subject: '–©–æ–¥–µ–Ω–Ω–∏–π –∫–≤—ñ–∑ –≥–æ—Ç–æ–≤–∏–π!',
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #2c3e50;">–ü—Ä–∏–≤—ñ—Ç, ${userName}!</h2>
            <p>–°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ–π –∫–≤—ñ–∑ –≥–æ—Ç–æ–≤–∏–π –¥–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è. –£ –≤–∞—Å —î –ø–∏—Ç–∞–Ω–Ω—è –∑ ${quizData.questions.length} –ø–∏—Ç–∞–Ω—å —Ä—ñ–∑–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π.</p>
            
            <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <h3 style="color: #495057; margin-top: 0;">–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó –ø–∏—Ç–∞–Ω—å:</h3>
              <ul>
                ${quizData.questions.map(q => `<li>${q.categoryName}</li>`).join('')}
              </ul>
            </div>
            
            <p><strong>–í–∞–∂–ª–∏–≤–æ:</strong> –ö–≤—ñ–∑ –¥–æ—Å—Ç—É–ø–Ω–∏–π –¥–æ 00:00. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–π—Ç–∏ –π–æ–≥–æ –≤—á–∞—Å–Ω–æ!</p>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.CLIENT_URL || 'http://localhost:8080'}/quiz" 
                 style="background-color: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
                –ü—Ä–æ–π—Ç–∏ –∫–≤—ñ–∑
              </a>
            </div>
            
            <p style="color: #6c757d; font-size: 14px;">
              –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
            </p>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log(`Quiz notification sent to ${userEmail}`);
    } catch (error) {
      console.error('Error sending quiz notification:', error);
    }
  }

  async sendQuizReminder(userEmail, userName, hoursLeft) {
    if (!this.transporter) {
      console.log('Email service not configured, skipping email reminder');
      return;
    }

    try {
      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: userEmail,
        subject: `–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: –ö–≤—ñ–∑ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è —á–µ—Ä–µ–∑ ${hoursLeft} –≥–æ–¥–∏–Ω`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #dc3545;">–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∫–≤—ñ–∑</h2>
            <p>–ü—Ä–∏–≤—ñ—Ç, ${userName}!</p>
            <p>–í–∏ —â–µ –Ω–µ –ø—Ä–æ–π—à–ª–∏ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ–π –∫–≤—ñ–∑. –î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–ª–∏—à–∏–ª–æ—Å—è <strong>${hoursLeft} –≥–æ–¥–∏–Ω</strong>.</p>
            
            <div style="background-color: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 4px; margin: 20px 0;">
              <p style="margin: 0; color: #856404;">
                <strong>‚è∞ –î–µ–¥–ª–∞–π–Ω:</strong> 00:00 —Å—å–æ–≥–æ–¥–Ω—ñ
              </p>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.CLIENT_URL || 'http://localhost:8080'}/quiz" 
                 style="background-color: #dc3545; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
                –ü—Ä–æ–π—Ç–∏ –∫–≤—ñ–∑ –∑–∞—Ä–∞–∑
              </a>
            </div>
            
            <p style="color: #6c757d; font-size: 14px;">
              –Ø–∫—â–æ –≤–∏ –≤–∂–µ –ø—Ä–æ–π—à–ª–∏ –∫–≤—ñ–∑, –ø—Ä–æ—ñ–≥–Ω–æ—Ä—É–π—Ç–µ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.
            </p>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log(`Quiz reminder sent to ${userEmail}`);
    } catch (error) {
      console.error('Error sending quiz reminder:', error);
    }
  }

  async sendQuizResult(userEmail, userName, result) {
    if (!this.transporter) {
      console.log('Email service not configured, skipping result email');
      return;
    }

    try {
      const percentage = Math.round((result.score / result.totalQuestions) * 100);
      const isGoodResult = percentage >= 80;

      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: userEmail,
        subject: `–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–≤—ñ–∑—É: ${result.score}/${result.totalQuestions}`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: ${isGoodResult ? '#28a745' : '#dc3545'};">
              ${isGoodResult ? 'üéâ –í—ñ–¥–º—ñ–Ω–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!' : 'üìö –Ñ –Ω–∞–¥ —á–∏–º –ø–æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏'}
            </h2>
            <p>–ü—Ä–∏–≤—ñ—Ç, ${userName}!</p>
            <p>–û—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∞—à–æ–≥–æ –∫–≤—ñ–∑—É:</p>
            
            <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <div style="display: flex; justify-content: space-between; margin-bottom: 10px;">
                <span><strong>–ü—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π:</strong></span>
                <span style="color: ${isGoodResult ? '#28a745' : '#dc3545'}; font-weight: bold;">
                  ${result.score}/${result.totalQuestions}
                </span>
              </div>
              <div style="display: flex; justify-content: space-between;">
                <span><strong>–í—ñ–¥—Å–æ—Ç–æ–∫:</strong></span>
                <span style="color: ${isGoodResult ? '#28a745' : '#dc3545'}; font-weight: bold;">
                  ${percentage}%
                </span>
              </div>
            </div>
            
            ${!isGoodResult ? `
              <div style="background-color: #d1ecf1; border: 1px solid #bee5eb; padding: 15px; border-radius: 4px; margin: 20px 0;">
                <p style="margin: 0; color: #0c5460;">
                  <strong>üí° –ü–æ—Ä–∞–¥–∞:</strong> –ü–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –±–∞–∑—É –∑–Ω–∞–Ω—å –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É.
                </p>
              </div>
            ` : ''}
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.CLIENT_URL || 'http://localhost:8080'}/knowledge-base" 
                 style="background-color: #6c757d; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
                –ë–∞–∑–∞ –∑–Ω–∞–Ω—å
              </a>
            </div>
            
            <p style="color: #6c757d; font-size: 14px;">
              –î—è–∫—É—î–º–æ –∑–∞ —É—á–∞—Å—Ç—å —É –∫–≤—ñ–∑—ñ! –ó–∞–≤—Ç—Ä–∞ –æ—á—ñ–∫—É–π—Ç–µ –Ω–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—è.
            </p>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log(`Quiz result sent to ${userEmail}`);
    } catch (error) {
      console.error('Error sending quiz result:', error);
    }
  }

  async sendWelcomeEmail(userEmail, userName) {
    if (!this.transporter) {
      console.log('Email service not configured, skipping welcome email');
      return;
    }

    try {
      const mailOptions = {
        from: process.env.EMAIL_USER,
        to: userEmail,
        subject: '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ Quiz App!',
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #2c3e50;">–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, ${userName}!</h2>
            <p>–î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –≤ Quiz App. –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ:</p>
            
            <ul style="color: #495057;">
              <li>–ü—Ä–æ—Ö–æ–¥–∏—Ç–∏ —â–æ–¥–µ–Ω–Ω—ñ –∫–≤—ñ–∑–∏ –∑ –ø–∏—Ç–∞–Ω—å —Ä—ñ–∑–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</li>
              <li>–ü–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ –±–∞–∑—É –∑–Ω–∞–Ω—å –¥–ª—è –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏</li>
              <li>–í—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Å–≤—ñ–π –ø—Ä–æ–≥—Ä–µ—Å —Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥</li>
              <li>–û—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –ø—Ä–æ –∫–≤—ñ–∑–∏</li>
            </ul>
            
            <div style="background-color: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 4px; margin: 20px 0;">
              <p style="margin: 0; color: #155724;">
                <strong>üìÖ –†–æ–∑–∫–ª–∞–¥ –∫–≤—ñ–∑—ñ–≤:</strong><br>
                ‚Ä¢ –ö–≤—ñ–∑–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—é—Ç—å—Å—è —â–æ–¥–Ω—è –æ 12:00<br>
                ‚Ä¢ –î–µ–¥–ª–∞–π–Ω –¥–ª—è –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è - 00:00<br>
                ‚Ä¢ –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –Ω–∞–¥—Å–∏–ª–∞—é—Ç—å—Å—è –∫–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏
              </p>
            </div>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${process.env.CLIENT_URL || 'http://localhost:8080'}" 
                 style="background-color: #28a745; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; display: inline-block;">
                –ü–æ—á–∞—Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
              </a>
            </div>
            
            <p style="color: #6c757d; font-size: 14px;">
              –Ø–∫—â–æ —É –≤–∞—Å –≤–∏–Ω–∏–∫–ª–∏ –ø–∏—Ç–∞–Ω–Ω—è, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
            </p>
          </div>
        `
      };

      await this.transporter.sendMail(mailOptions);
      console.log(`Welcome email sent to ${userEmail}`);
    } catch (error) {
      console.error('Error sending welcome email:', error);
    }
  }
}

module.exports = new EmailService();
